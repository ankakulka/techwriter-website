"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5284],{3169:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"tutorials/python-tutorials","title":"Convert image format using Python","description":"In the days of ChatGPT, automating your daily tasks has never been so easy. You can supercharge your automation workflows if you gain some basic understanding of programming. Python is a beginner-friendly programming language and can be used in multiple scenarios.","source":"@site/docs/tutorials/python-tutorials.md","sourceDirName":"tutorials","slug":"/tutorials/python-tutorials","permalink":"/docs/tutorials/python-tutorials","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"python","permalink":"/docs/tags/python"},{"inline":true,"label":"python3","permalink":"/docs/tags/python-3"},{"inline":true,"label":"beginner-python","permalink":"/docs/tags/beginner-python"},{"inline":true,"label":"image-editing","permalink":"/docs/tags/image-editing"},{"inline":true,"label":"coding","permalink":"/docs/tags/coding"},{"inline":true,"label":" automate","permalink":"/docs/tags/automate"}],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Convert image format using Python","tags":["python","python3","beginner-python","image-editing","coding"," automate"]},"sidebar":"tutorialSidebar","previous":{"title":"Make an AI chatbot","permalink":"/docs/tutorials/AI-chatbot"},"next":{"title":"CSS Animation Tutorial","permalink":"/docs/tutorials/CSS-animation"}}');var i=t(4848),s=t(8453);const r={sidebar_position:1,title:"Convert image format using Python",tags:["python","python3","beginner-python","image-editing","coding"," automate"]},a="Use Python to automate your daily tasks",l={},d=[{value:"Merge PDFs Using Python",id:"merge-pdfs-using-python",level:2},{value:"Convert image format using Python",id:"convert-image-format-using-python",level:2},{value:"Install Pillow",id:"install-pillow",level:3},{value:"Convert image format",id:"convert-image-format",level:3}];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"use-python-to-automate-your-daily-tasks",children:"Use Python to automate your daily tasks"})}),"\n",(0,i.jsx)(n.p,{children:"In the days of ChatGPT, automating your daily tasks has never been so easy. You can supercharge your automation workflows if you gain some basic understanding of programming. Python is a beginner-friendly programming language and can be used in multiple scenarios.\nHere are some use cases to give you a taste of what you can do:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Merge PDFs using Python"}),"\n",(0,i.jsx)(n.li,{children:"Convert image format using Python"}),"\n",(0,i.jsx)(n.li,{children:"Enhance your images"}),"\n",(0,i.jsx)(n.li,{children:"Check website status"}),"\n",(0,i.jsx)(n.li,{children:"Backup important files"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Once you understand the basics, you can then expand this knowledge to build your own custom scripts.\nEven if you ask ChatGPT to write a script for you, some understanding of basic concepts will be useful, so that you can be more specific in your instructions and potentially catch errors."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note"})," Install Python version 3and Visual Studio Code. If you're on a Mac or a newer version of Windows, Pythons should already be pre-installed."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"merge-pdfs-using-python",children:"Merge PDFs Using Python"}),"\n",(0,i.jsx)(n.p,{children:"Working with PDF files can be a pain...but it doesn't have to be.\nYou don't even need any expensive software to handle PDFs: just a few lines of Python code will suffice."}),"\n",(0,i.jsx)(n.p,{children:"In this tutorial, I'll show you how to easily merge multiple files without having to tinker in the Adobe Acrobat or a similar program, simply taking advantage of the capabilities of the PyPDF2 library.\nThis method is much quicker and cheaper and all the tools used here are free."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Organize your files"}),(0,i.jsx)("br",{}),"\nGather all PDFs you want to merge in the same folder."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Install the PyPDF2 library"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.p,{children:"Python doesn't include built-in tools to work with PDFs, so we'll need to import an external set of tools.\nA set of these is called a library."}),"\n",(0,i.jsxs)(n.p,{children:["In the terminal, type ",(0,i.jsx)(n.code,{children:"pip install PyPDF2"}),". ",(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Import PyPDF2 library"}),(0,i.jsx)("br",{})]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:'To be able to work with the tools included in the library we\'ve just imported, we need to add them to our Python file.\nGo to Visual Studio code, and create a new file "app.py".\nThen add this code to the file:'}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import PyPDF2\nfrom PyPDF import PdfMerger\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Use PdfMerger"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"We are now ready to work with the tools included in the PyPDF library.\nOne of those is called PdfMerger, and as you might have guessed, allows us to merge PDFs.\nWe need a container to hold our files in, as you would in a folder. In programming, this is called an object."}),"\n",(0,i.jsxs)(n.p,{children:['Create an object called "merger".',(0,i.jsx)("br",{}),'\nBy adding the equal sign, I tell Python that "merger" is a single object that is part of the PdfMerger class.\nA class is a blueprint used to create an object based on it.']}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"merger = PdfMerger()\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Combine the files"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:'As in real life, we can use objects in different ways. Python allows us certain actions - these are called methods.\nOne of those methods is "append".'}),"\n",(0,i.jsx)(n.p,{children:"This is called a method, and there are specific methods we can use built into the language."}),"\n",(0,i.jsxs)(n.p,{children:["We'll use ",(0,i.jsx)(n.code,{children:"append"})," method to attach files in the the consecutive order.",(0,i.jsx)("br",{}),"\nAs we want all files appended to the merger object"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'for pdf in ["file1.pdf", "file2.pdf", "file3.pdf", "file4.pdf"]:\n    merger.append(pdf)\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"5",children:["\n",(0,i.jsxs)(n.li,{children:["Now our files are ordered, but we want to create a new file containing all of them.\nWe use a ",(0,i.jsx)(n.code,{children:"write()"})," method to create a new file:",(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'merger.write("my-new-merged-file.pdf")\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"6",children:["\n",(0,i.jsxs)(n.li,{children:["To stop the program from running indefinitely, you need to close it: ",(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"merger.close()\n"})}),"\n",(0,i.jsx)(n.p,{children:"The resulting Python code:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import PyPDF2\nfrom PyPDF import PdfMerger\nmerger = PdfMerger()\nfor pdf in ["file1.pdf", "file2.pdf", "file3.pdf", "file4.pdf"]:\n   merger.append(pdf)\nmerger.write("my-new-merged-file.pdf")\nmerger.close()\n'})}),"\n",(0,i.jsx)(n.h2,{id:"convert-image-format-using-python",children:"Convert image format using Python"}),"\n",(0,i.jsxs)(n.p,{children:["There's plenty of image editing software out there, most notably Photoshop -\nbut did you know you can also edit images using Python?\nWhile ",(0,i.jsx)(n.a,{href:"https://pillow.readthedocs.io/en/stable/index.html#",children:"Pillow"}),", the Python library used in this tutorial, won't replace Photoshop,\nit does help you to perform certain actions ",(0,i.jsx)(n.strong,{children:"faster"})," - and completely free."]}),"\n",(0,i.jsx)(n.p,{children:"In this introductory tutorial I'll show you how to convert image format using Pillow library.\nYou can then build on that knowledge to progress to the more advanced concepts, such as Image filters."}),"\n",(0,i.jsx)(n.p,{children:"I'm using Python version 3."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Tip!"})," Some basic Python knowldege required!"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"install-pillow",children:"Install Pillow"}),"\n",(0,i.jsxs)(n.p,{children:["First, we need to prepare our paints and brushes, in our case it means installing the Pillow library. ",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.p,{children:"In your terminal type:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pip install Pillow\n"})}),"\n",(0,i.jsx)(n.h3,{id:"convert-image-format",children:"Convert image format"}),"\n",(0,i.jsxs)(n.p,{children:["Converting the image format in the Pillow library is quick and easy.\nIn this example I'll show you how to convert a ",(0,i.jsx)(n.strong,{children:"JPEG"})," image to a ",(0,i.jsx)(n.strong,{children:"PNG"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"You can also use Pillow to convert to and from other popular image formats such as:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"BMP"}),"\n",(0,i.jsx)(n.li,{children:"GIF"}),"\n",(0,i.jsx)(n.li,{children:"EPS"}),"\n",(0,i.jsx)(n.li,{children:"TIFF"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Check out the docs for the ",(0,i.jsx)(n.a,{href:"https://pillow.readthedocs.io/en/stable/handbook/image-file-formats.html",children:"full list of supported formats"}),"."]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["In your Python file, import ",(0,i.jsx)(n.code,{children:"Image"})," from the Pillow library.\nThe ",(0,i.jsx)(n.code,{children:"Image"})," module contains a class of the same name."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from PIL import Image\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"Create an Image object and call the open method on it. Make sure that you add the correct path for the image location - my image is in the same folder as my Python file, so I don't need to  add it."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"img = Image.open('some-pic.jpg')\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:"Save as a png image: specify the file name and the extention (format) to save the image in the same folder. You can also save the image in a different location by adding the file path."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"im.save('converted-pic.png')\n"})}),"\n",(0,i.jsx)(n.p,{children:"The resulting Python code:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import Image\n\nimg = Image.open('some-pic.jpg')\nim.save('converted-pic.png')\n"})})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var o=t(6540);const i={},s=o.createContext(i);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);